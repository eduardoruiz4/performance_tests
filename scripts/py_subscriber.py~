#!/usr/bin/env python

# This node subscribes the message published by the x_publisher node, additionally it calculates the time elapsed between incoming messages, converts it to frequency,
# and Finally publishes the real rate frequency on a topic in order to be used by other nodes (specially for visualization)

import rospy
from performance_tests.msg import SuperAwesome #Custom created message 
from std_msgs.msg import Float64

previous_time=0
pub = rospy.Publisher('/RealRate', Float64, queue_size=1000)

def callback(data):
    global previous_time

    now=rospy.get_time()
    elapsed_time=now-previous_time
    previous_time=now
    freq_rate=1/elapsed_time
    rospy.loginfo("REAL RATE %f",freq_rate )
    pub.publish(freq_rate)

def listener():
    
    rospy.init_node('py_subscriber', anonymous=True)

    rospy.Subscriber("/SuperAwesomeTopic", SuperAwesome, callback)
    
    rospy.spin()

if __name__ == '__main__':
    listener()
